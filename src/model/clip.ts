/**
 * Shotstack
 * Official PHP SDK for the Shotstack Cloud Video Editing API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Asset } from './asset';
import { Offset } from './offset';
import { Transformation } from './transformation';
import { Transition } from './transition';

/**
* A clip is a container for a specific type of asset, i.e. a title, image, video, audio or html. You use a Clip to define when an asset will display on the timeline, how long it will play for and transitions, filters and effects to apply to it.
*/
export class Clip {
    'asset': Asset;
    /**
    * The start position of the Clip on the timeline, in seconds.
    */
    'start': number;
    /**
    * The length, in seconds, the Clip should play for.
    */
    'length': number;
    /**
    * Set how the asset should be scaled to fit the viewport using one of the following options:    <ul>     <li>`crop` <b>(default)</b> - scale the asset to fill the viewport while maintaining the aspect ratio. The asset will be cropped if it exceeds the bounds of the viewport.</li>     <li>`cover` - stretch the asset to fill the viewport without maintaining the aspect ratio.</li>     <li>`contain` - fit the entire asset within the viewport while maintaining the original aspect ratio.</li>     <li>`none` - preserves the original asset dimensions and does not apply any scaling.</li>   </ul>
    */
    'fit'?: Clip.FitEnum;
    /**
    * Scale the asset to a fraction of the viewport size - i.e. setting the scale to 0.5 will scale asset to half the size of the viewport. This is useful for picture-in-picture video and  scaling images such as logos and watermarks.
    */
    'scale'?: number;
    /**
    * Place the asset in one of nine predefined positions of the viewport. This is most effective for when the asset is scaled and you want to position the element to a specific position. <ul>   <li>`top` - top (center)</li>   <li>`topRight` - top right</li>   <li>`right` - right (center)</li>   <li>`bottomRight` - bottom right</li>   <li>`bottom` - bottom (center)</li>   <li>`bottomLeft` - bottom left</li>   <li>`left` - left (center)</li>   <li>`topLeft` - top left</li>   <li>`center` - center</li> </ul>
    */
    'position'?: Clip.PositionEnum;
    'offset'?: Offset;
    'transition'?: Transition;
    /**
    * A motion effect to apply to the Clip. <ul>   <li>`zoomIn` - slow zoom in</li>   <li>`zoomOut` - slow zoom out</li>   <li>`slideLeft` - slow slide (pan) left</li>   <li>`slideRight` - slow slide (pan) right</li>   <li>`slideUp` - slow slide (pan) up</li>   <li>`slideDown` - slow slide (pan) down</li> </ul> The motion effect speed can also be controlled by appending `Fast` or `Slow` to the effect, e.g. `zoomInFast` or `slideRightSlow`.
    */
    'effect'?: Clip.EffectEnum;
    /**
    * A filter effect to apply to the Clip. <ul>   <li>`blur` - blur the scene</li>   <li>`boost` - boost contrast and saturation</li>   <li>`contrast` - increase contrast</li>   <li>`darken` - darken the scene</li>   <li>`greyscale` - remove colour</li>   <li>`lighten` - lighten the scene</li>   <li>`muted` - reduce saturation and contrast</li>   <li>`negative` - negative colors</li> </ul>
    */
    'filter'?: Clip.FilterEnum;
    /**
    * Sets the opacity of the Clip where 1 is opaque and 0 is transparent.
    */
    'opacity'?: number;
    'transform'?: Transformation;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "asset",
            "baseName": "asset",
            "type": "Asset"
        },
        {
            "name": "start",
            "baseName": "start",
            "type": "number"
        },
        {
            "name": "length",
            "baseName": "length",
            "type": "number"
        },
        {
            "name": "fit",
            "baseName": "fit",
            "type": "Clip.FitEnum"
        },
        {
            "name": "scale",
            "baseName": "scale",
            "type": "number"
        },
        {
            "name": "position",
            "baseName": "position",
            "type": "Clip.PositionEnum"
        },
        {
            "name": "offset",
            "baseName": "offset",
            "type": "Offset"
        },
        {
            "name": "transition",
            "baseName": "transition",
            "type": "Transition"
        },
        {
            "name": "effect",
            "baseName": "effect",
            "type": "Clip.EffectEnum"
        },
        {
            "name": "filter",
            "baseName": "filter",
            "type": "Clip.FilterEnum"
        },
        {
            "name": "opacity",
            "baseName": "opacity",
            "type": "number"
        },
        {
            "name": "transform",
            "baseName": "transform",
            "type": "Transformation"
        }    ];

    static getAttributeTypeMap() {
        return Clip.attributeTypeMap;
    }
}

export namespace Clip {
    export enum FitEnum {
        COVER = <any> 'cover',
        CONTAIN = <any> 'contain',
        CROP = <any> 'crop',
        NONE = <any> 'none'
    }
    export enum PositionEnum {
        TOP = <any> 'top',
        TOP_RIGHT = <any> 'topRight',
        RIGHT = <any> 'right',
        BOTTOM_RIGHT = <any> 'bottomRight',
        BOTTOM = <any> 'bottom',
        BOTTOM_LEFT = <any> 'bottomLeft',
        LEFT = <any> 'left',
        TOP_LEFT = <any> 'topLeft',
        CENTER = <any> 'center'
    }
    export enum EffectEnum {
        ZOOM_IN = <any> 'zoomIn',
        ZOOM_IN_SLOW = <any> 'zoomInSlow',
        ZOOM_IN_FAST = <any> 'zoomInFast',
        ZOOM_OUT = <any> 'zoomOut',
        ZOOM_OUT_SLOW = <any> 'zoomOutSlow',
        ZOOM_OUT_FAST = <any> 'zoomOutFast',
        SLIDE_LEFT = <any> 'slideLeft',
        SLIDE_LEFT_SLOW = <any> 'slideLeftSlow',
        SLIDE_LEFT_FAST = <any> 'slideLeftFast',
        SLIDE_RIGHT = <any> 'slideRight',
        SLIDE_RIGHT_SLOW = <any> 'slideRightSlow',
        SLIDE_RIGHT_FAST = <any> 'slideRightFast',
        SLIDE_UP = <any> 'slideUp',
        SLIDE_UP_SLOW = <any> 'slideUpSlow',
        SLIDE_UP_FAST = <any> 'slideUpFast',
        SLIDE_DOWN = <any> 'slideDown',
        SLIDE_DOWN_SLOW = <any> 'slideDownSlow',
        SLIDE_DOWN_FAST = <any> 'slideDownFast'
    }
    export enum FilterEnum {
        BLUR = <any> 'blur',
        BOOST = <any> 'boost',
        CONTRAST = <any> 'contrast',
        DARKEN = <any> 'darken',
        GREYSCALE = <any> 'greyscale',
        LIGHTEN = <any> 'lighten',
        MUTED = <any> 'muted',
        NEGATIVE = <any> 'negative'
    }
}
