/**
 * Shotstack
 * Official PHP SDK for the Shotstack Cloud Video Editing API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Rendition } from './rendition';

/**
* The id and attributes of the generated rendition file.
*/
export class RenditionResponseAttributes {
    /**
    * The rendition id.
    */
    'id': string;
    /**
    * The status of the rendition transformation task. <ul>   <li>`waiting` - rendition task is waiting for source file to become available</li>   <li>`queued` - rendition task is queued waiting to be processed</li>   <li>`processing` - the rendition is being processed</li>   <li>`ready` - the rendition is ready to be downloaded</li>   <li>`failed` - there was an error creating the rendition</li>   <li>`deleted` - the rendition has been deleted</li> </ul>
    */
    'status'?: RenditionResponseAttributes.StatusEnum;
    /**
    * The URL of the rendition file hosted by Shotstack. The file at the URL can be used by the Edit API. Source file URL\'s consist of a base URL (AWS bucket), owner id, source id and a file name with the rendition id and extension.
    */
    'url'?: string;
    /**
    * The time in milliseconds it took to process the rendition.
    */
    'executionTime'?: number;
    'transformation'?: Rendition;
    /**
    * The width in pixels of the ingested source file, if a video or image.
    */
    'width'?: number;
    /**
    * The height in pixels of the ingested source file, if a video or image.
    */
    'height'?: number;
    /**
    * The duration in seconds of the ingested source file, if a video or audio file.
    */
    'duration'?: number;
    /**
    * The frame rate in frames per second of the source file, if a video file.
    */
    'fps'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "RenditionResponseAttributes.StatusEnum"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "executionTime",
            "baseName": "executionTime",
            "type": "number"
        },
        {
            "name": "transformation",
            "baseName": "transformation",
            "type": "Rendition"
        },
        {
            "name": "width",
            "baseName": "width",
            "type": "number"
        },
        {
            "name": "height",
            "baseName": "height",
            "type": "number"
        },
        {
            "name": "duration",
            "baseName": "duration",
            "type": "number"
        },
        {
            "name": "fps",
            "baseName": "fps",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return RenditionResponseAttributes.attributeTypeMap;
    }
}

export namespace RenditionResponseAttributes {
    export enum StatusEnum {
        QUEUED = <any> 'queued',
        IMPORTING = <any> 'importing',
        READY = <any> 'ready',
        FAILED = <any> 'failed',
        DELETED = <any> 'deleted',
        OVERWRITTEN = <any> 'overwritten'
    }
}
