/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are three API\'s, one for editing and generating assets (Edit API), one for managing hosted assets (Serve API) and one for ingesting and transforming source assets (Ingest API).  Each API has it\'s own base URL and collection of endpoints. Each API uses the same set of API keys.  **[Edit API](#shotstack-edit)** - [https://api.shotstack.io/edit/{version}](#)<br> Edit videos, images and audio assets in the cloud using a simple JSON schema and templates.  **[Serve API](#shotstack-serve)** - [https://api.shotstack.io/serve/{version}](#)<br> Inspect and manage the hosting of assets generated by the Edit and Ingest APIs.  **[Ingest API](#shotstack-ingest)** - [https://api.shotstack.io/ingest/{version}](#)<br> Ingest (upload, store and transform) source footage, images, audio and fonts to be used by the Edit API.  **[Create API](#shotstack-create)** - [https://api.shotstack.io/create/{version}](#)<br> Generate images, videos, voice overs and text using built in and third party generative AI providers. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The id and attributes of the generated asset.
*/
export class GeneratedAssetResponseAttributes {
    /**
    * The owner id of the asset.
    */
    'owner': string;
    /**
    * The native or third party provider that generated the asset, `shotstack`, `elevenlabs`, `heygen` or `d-id`.
    */
    'provider': GeneratedAssetResponseAttributes.ProviderEnum;
    /**
    * The type of service used to generate the asset, `text-to-speech` or `text-to-avatar`.
    */
    'type': GeneratedAssetResponseAttributes.TypeEnum;
    /**
    * The URL of the asset file hosted by Shotstack. The file at the URL can be used by the Edit API. Generated asset file URL\'s consist of a base URL (AWS bucket), owner id, asset id and extension. The extension varies depending on the type of file generated.
    */
    'url'?: string;
    /**
    * The status of the asset file generation task. <ul>   <li>`queued` - generation task is queued waiting to be processed</li>   <li>`processing` - the asset is being generated by the provider</li>   <li>`saving` - the asset is being saved to Shotstack</li>   <li>`done` - the asset has been generated and stored</li>   <li>`failed` - there was an error generating the asset</li> </ul>
    */
    'status': GeneratedAssetResponseAttributes.StatusEnum;
    /**
    * The time the generate asset task was initially queued.
    */
    'created': string;
    /**
    * The time the asset status was last updated.
    */
    'updated': string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "owner",
            "baseName": "owner",
            "type": "string"
        },
        {
            "name": "provider",
            "baseName": "provider",
            "type": "GeneratedAssetResponseAttributes.ProviderEnum"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "GeneratedAssetResponseAttributes.TypeEnum"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "GeneratedAssetResponseAttributes.StatusEnum"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "string"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return GeneratedAssetResponseAttributes.attributeTypeMap;
    }
}

export namespace GeneratedAssetResponseAttributes {
    export enum ProviderEnum {
        Shotstack = <any> 'shotstack',
        Elevenlabs = <any> 'elevenlabs',
        Heygen = <any> 'heygen',
        DId = <any> 'd-id'
    }
    export enum TypeEnum {
        Speech = <any> 'text-to-speech',
        Avatar = <any> 'text-to-avatar'
    }
    export enum StatusEnum {
        Queued = <any> 'queued',
        Processing = <any> 'processing',
        Saving = <any> 'saving',
        Done = <any> 'done',
        Failed = <any> 'failed'
    }
}
