/**
 * Shotstack
 * Official PHP SDK for the Shotstack Cloud Video Editing API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* The list of asset attributes and their values.
*/
export class AssetResponseAttributes {
    /**
    * The unique id of the hosted asset in UUID format.
    */
    'id': string;
    /**
    * The owner id of the asset.
    */
    'owner': string;
    /**
    * The region the asset is hosted, currently only `au` (Australia).
    */
    'region'?: string;
    /**
    * The original render id that created the asset in UUID format. Multiple assets can share the same render id.
    */
    'renderId'?: string;
    /**
    * The third party id of an asset transferred to an external provider, i.e. Mux, YouTube or S3. If the provider is Shotstack, the providerID is the same as the asset id.
    */
    'providerId'?: string;
    /**
    * The asset file name.
    */
    'filename'?: string;
    /**
    * The asset file name.
    */
    'url'?: string;
    /**
    * The status of the asset. <ul>   <li>`importing` - the asset is being copied to the hosting service</li>   <li>`ready` - the asset is ready to be served to users</li>   <li>`failed` - the asset failed to copy or delete</li>   <li>`deleted` - the asset has been deleted</li> </ul>
    */
    'status': AssetResponseAttributes.StatusEnum;
    /**
    * The time the asset was created.
    */
    'created'?: string;
    /**
    * The time the asset status was last updated.
    */
    'updated'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "owner",
            "baseName": "owner",
            "type": "string"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string"
        },
        {
            "name": "renderId",
            "baseName": "renderId",
            "type": "string"
        },
        {
            "name": "providerId",
            "baseName": "providerId",
            "type": "string"
        },
        {
            "name": "filename",
            "baseName": "filename",
            "type": "string"
        },
        {
            "name": "url",
            "baseName": "url",
            "type": "string"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "AssetResponseAttributes.StatusEnum"
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "string"
        },
        {
            "name": "updated",
            "baseName": "updated",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return AssetResponseAttributes.attributeTypeMap;
    }
}

export namespace AssetResponseAttributes {
    export enum StatusEnum {
        IMPORTING = <any> 'importing',
        READY = <any> 'ready',
        FAILED = <any> 'failed',
        DELETED = <any> 'deleted'
    }
}
